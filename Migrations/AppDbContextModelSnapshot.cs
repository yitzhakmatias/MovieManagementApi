// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieManagementApi.Data;

#nullable disable

namespace MovieManagementApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("ActorMovie");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 3
                        },
                        new
                        {
                            ActorId = 4,
                            MovieId = 4
                        },
                        new
                        {
                            ActorId = 5,
                            MovieId = 5
                        },
                        new
                        {
                            ActorId = 6,
                            MovieId = 6
                        },
                        new
                        {
                            ActorId = 7,
                            MovieId = 7
                        },
                        new
                        {
                            ActorId = 8,
                            MovieId = 8
                        },
                        new
                        {
                            ActorId = 9,
                            MovieId = 9
                        },
                        new
                        {
                            ActorId = 10,
                            MovieId = 10
                        });
                });

            modelBuilder.Entity("MovieManagementApi.Core.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1974, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1974, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christian Bale"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1964, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keanu Reeves"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1963, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Brad Pitt"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1948, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samuel L. Jackson"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1964, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Russell Crowe"
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(1975, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kate Winslet"
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateTime(1940, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Al Pacino"
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateTime(1965, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Robert Downey Jr."
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateTime(1981, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chris Evans"
                        });
                });

            modelBuilder.Entity("MovieManagementApi.Core.Entities.Movie", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sci-Fi Thriller",
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Space Adventure",
                            ReleaseDate = new DateTime(2014, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Action Thriller",
                            ReleaseDate = new DateTime(2008, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cyberpunk Sci-Fi",
                            ReleaseDate = new DateTime(1999, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Psychological Drama",
                            ReleaseDate = new DateTime(1999, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Fight Club"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Crime Drama",
                            ReleaseDate = new DateTime(1994, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Historical Drama",
                            ReleaseDate = new DateTime(2000, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Gladiator"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Romance/Drama",
                            ReleaseDate = new DateTime(1997, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Mafia Drama",
                            ReleaseDate = new DateTime(1972, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Superhero Action",
                            ReleaseDate = new DateTime(2019, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avengers: Endgame"
                        });
                });

            modelBuilder.Entity("MovieManagementApi.Core.Entities.MovieRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rating")
                        .HasColumnType("REAL");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Amazing!",
                            MovieId = 1,
                            Rating = 0.0,
                            Score = 9
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Masterpiece!",
                            MovieId = 2,
                            Rating = 0.0,
                            Score = 10
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Great action!",
                            MovieId = 3,
                            Rating = 0.0,
                            Score = 9
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Mind-bending!",
                            MovieId = 4,
                            Rating = 0.0,
                            Score = 8
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Unique storytelling!",
                            MovieId = 5,
                            Rating = 0.0,
                            Score = 8
                        },
                        new
                        {
                            Id = 6,
                            Comment = "Iconic!",
                            MovieId = 6,
                            Rating = 0.0,
                            Score = 9
                        },
                        new
                        {
                            Id = 7,
                            Comment = "Epic!",
                            MovieId = 7,
                            Rating = 0.0,
                            Score = 10
                        },
                        new
                        {
                            Id = 8,
                            Comment = "Classic love story!",
                            MovieId = 8,
                            Rating = 0.0,
                            Score = 7
                        },
                        new
                        {
                            Id = 9,
                            Comment = "Legendary!",
                            MovieId = 9,
                            Rating = 0.0,
                            Score = 10
                        },
                        new
                        {
                            Id = 10,
                            Comment = "Fantastic ending!",
                            MovieId = 10,
                            Rating = 0.0,
                            Score = 9
                        });
                });

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.HasOne("MovieManagementApi.Core.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieManagementApi.Core.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieManagementApi.Core.Entities.MovieRating", b =>
                {
                    b.HasOne("MovieManagementApi.Core.Entities.Movie", "Movie")
                        .WithMany("Ratings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieManagementApi.Core.Entities.Movie", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
